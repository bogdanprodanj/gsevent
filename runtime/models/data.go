// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Data data
// swagger:model Data
type Data struct {

	// A key-value dictionary where the key must be a string but the value can be of any data type
	// Required: true
	Params map[string]interface{} `json:"params"`

	// UNIX timestamp in seconds
	// Required: true
	Ts *int64 `json:"ts"`
}

// Validate validates this data
func (m *Data) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateParams(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Data) validateParams(formats strfmt.Registry) error {

	for k := range m.Params {

		if err := validate.Required("params"+"."+k, "body", m.Params[k]); err != nil {
			return err
		}

		if err := validate.Required("params"+"."+k, "body", m.Params[k]); err != nil {
			return err
		}

	}

	return nil
}

func (m *Data) validateTs(formats strfmt.Registry) error {

	if err := validate.Required("ts", "body", m.Ts); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Data) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Data) UnmarshalBinary(b []byte) error {
	var res Data
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
